---
# cleanup from old docker installations
- name: remove obsolete docker packages
  package: name={{ item }} state=absent
  with_items:
    - docker
    - docker-common
    - container-selinux
    - docker-selinux
    - docker-engine
    - docker-ce
  when: docker_cleanup_old

# install docker
- include: install-docker-redhat.yml
  when: ansible_os_family == "RedHat"

- include: install-docker-ubuntu.yml
  when: ansible_distribution == "Ubuntu"

# configure docker
- block:
    - name: Create docker config dir (systemd)
      file: name=/etc/systemd/system/docker.service.d
            state=directory

    - name: Copy proxy configuration (systemd)
      template: src=http-proxy.conf.j2
                dest=/etc/systemd/system/docker.service.d/http-proxy.conf
      when: cluster_provider|default() == "monsoon"

    - systemd: name=docker daemon_reload=yes
  when: ansible_service_mgr == "systemd"

- block:
  - name: Copy proxy configuration (upstart)
    template: src=docker.config.j2 dest=/etc/default/docker
  when:  ansible_service_mgr != "systemd"

- file: name=/etc/docker
        state=directory

- name: set fact for docker daemon template path
  set_fact:
    path: docker.daemon.json.j2

- name: create docker configuration file
  template:
    src: "{{ path }}"
    dest: /etc/docker/daemon.json

# enable the docker service
- name: Restart docker service
  service: name=docker state=restarted

- name: Enable and start docker daemon service
  service: name=docker state=started enabled=yes

