---
- name: Create master machines on AWS
  ec2:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    ec2_url: "{{ ec2_endpoint_url }}"
    zone: "{{ aws_cluster_zone }}"
    image: "{{ master_image }}"
    instance_type: "{{ master_instance_type }}"
    key_name: "{{ aws_key_name}}"
    group_id: "{{ aws_security_group_id }}"
    count: 1 # Only single master supported for now
    wait: yes # we are going to wait for workers and also wait until ssh is ready.
    wait_timeout: 1000
    validate_certs: no
    user_data: "#!/bin/bash\nmkdir -p /root/.ssh\ncat>>/root/.ssh/authorized_keys<<EOF\n{{ lookup('file', 'id_rsa.pub') }}\n"
    vpc_subnet_id: "{{ aws_vpc_subnet_id }}"
    region: "{{ aws_region }}"
    volumes:
    - device_name: "{{ device_name }}"
      device_type: "{{ aws_device_type }}"
      volume_size: "{{ aws_volume_size }}"
      delete_on_termination: true
    instance_tags:
      Name: "{{ master_name }}"
  register: created_masters

- name: Set create_masters as fact for inventory file template
  set_fact:
    master_instances: "{{ created_masters.instances }}"

- name: Debug master_instances
  debug: var=master_instances

- name: associate elastic ip to master
  ec2_eip:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    ec2_url: "{{ ec2_endpoint_url }}"
    region: "{{ aws_region }}"
    device_id: "{{ master_instances[0].id }}"

- name: get the facts of masters
  ec2_instance_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    ec2_url: "{{ ec2_endpoint_url }}"
    region: "{{ aws_region }}"
    filters:
      instance-id: "{{ master_instances[0].id }}"
  register: result_masters_facts

- name: set the facts including public ip
  set_fact:
    master_instances_facts: "{{ result_masters_facts.instances }}"

- name: Debug master_instances_facts
  debug:
    var: master_instances_facts
