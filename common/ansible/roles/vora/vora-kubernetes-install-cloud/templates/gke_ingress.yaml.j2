apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vsystem
  annotations:
{% if enable_client_cert is defined and enable_client_cert == 'true' %}
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/auth-tls-secret: {{ vora_kube_namespace }}/vora.conf.secop.client.ca.truststore
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "optional"
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    nginx.ingress.kubernetes.io/proxy-ssl-secret: {{ vora_kube_namespace }}/vora.conf.secop.ingress.client.truststore
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-buffer-size: 16k
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
{% else %}
    kubernetes.io/ingress.allow-http: "false"
    ingress.kubernetes.io/force-ssl-redirect: "true"
    ingress.kubernetes.io/proxy-body-size: "0"
    networking.gke.io/v1beta1.FrontendConfig: "ssl-frontend-config"    
{% endif %}
spec:
  rules:
  - host: {{ gcloud_vsystem_domain_name }}
{% if enable_client_cert is defined and enable_client_cert == 'true' %}
    http:
      paths:
      - backend:
          service: 
            name: vsystem
            port: 
              number: 8797
        path: /
        pathType: ImplementationSpecific
{% else %}
    http:
      paths:
      - backend:
          service:
            name: vsystem-ext
            port:
              number: 8797
        path: /*
        pathType: ImplementationSpecific
{% endif %}
  tls:
  - hosts:
      - {{ gcloud_vsystem_domain_name }}
    secretName: vsystem-tls-certs        
