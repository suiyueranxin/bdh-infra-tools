{% if cloud_platform == "gke" %}
SLP_BRIDGE_REPOSITORY: {{ gke_docker_registry_address}}
SLP_DOCKER_REGISTRY: "{{ gke_docker_registry_address }}"
{% endif %}
{% if cloud_platform == "eks" %}
SLP_BRIDGE_REPOSITORY: {{ eks_docker_install_registry }}
SLP_DOCKER_REGISTRY: "{{ eks_docker_install_registry }}"
{% endif %}
{% if cloud_platform == "azure-aks" %}
SLP_BRIDGE_REPOSITORY: {{ aks_docker_install_registry }}
SLP_DOCKER_REGISTRY: "{{ aks_docker_install_registry }}"
{% endif %}

ADMIN_USER: {{ slcb_default_bridge_admin_user }}
ADMIN_PASSWORD: {{ slcb_default_bridge_admin_password }}

SLP_ACTIVITY: UNINSTALL

{% if cloud_platform == "gke" %}
KUBECONFIG: "{{ gke_k8s_cluster_kubeconfig }}"
{% endif %}
{% if cloud_platform == "eks" %}
KUBECONFIG: "{{ eks_k8s_cluster_kubeconfig }}"
{% endif %}
{% if cloud_platform == "azure-aks" %}
KUBECONFIG: "{{ azure_kubeconfig }}"
{% endif %}

{% if gcp_vflow_docker_registry_suffix is defined and gcp_vflow_docker_registry_suffix|length %}
SLP_CONFIGURE_REGISTRY_FOR_VFLOW: 'true'
SLP_VFLOW_REGISTRY: '{{ gke_docker_registry_name }}/{{ gcloud_project_id }}/{{ gcp_vflow_docker_registry_suffix }}'
{% endif %}

{% if azure_vflow_registry_name is defined and azure_vflow_registry_name|length %}
SLP_CONFIGURE_REGISTRY_FOR_VFLOW: 'true'
SLP_VFLOW_REGISTRY: '{{ azure_vflow_registry_name }}.azurecr.io'
SLP_VFLOW_REGISTRY_USER: '{{ acr_username.stdout|replace("\"", "") }}'
SLP_VFLOW_REGISTRY_PASSWORD: '{{ acr_password.stdout|replace("\"", "") }}'
{% endif %}

{% if eks_vflow_install_registry is defined and eks_vflow_install_registry != "" %}
SLP_CONFIGURE_REGISTRY_FOR_VFLOW: 'true'
SLP_VFLOW_REGISTRY: '{{ eks_vflow_install_registry }}'
{% endif %}

{% if slcb_init == true %}
SLP_NAMESPACE: '{{ slc_ns }}'
{% else %}
SLP_NAMESPACE: '{{ vora_kube_namespace }}'
{% endif %}
SAP_DOCKER_REPO: '{{ docker_artifactory }}'
IMAGES_SAP_ANON: 'true'
SYSTEM_ADMIN_PASSWORD: '{{ vora_system_tenant_password }}'
SLP_VORA_ADMIN_USERNAME: '{{ vora_username }}'
DEFAULT_ADMIN_PASSWORD: '{{ vora_password }}'
{% if enable_network_policies == 'yes' %}
SLP_ENABLE_NETWORK_POLICIES: 'true'
{% else %}
SLP_ENABLE_NETWORK_POLICIES: 'false'
{% endif %}
{% if enable_kaniko == 'yes' %}
SLP_ENABLE_KANIKO: 'true'
{% else %}
SLP_ENABLE_KANIKO: 'false'
{% endif %}
{% if enable_storage_checkpoint == 'yes' %}
SLP_ENABLE_CHECKPOINT_STORE: 'true'
SLP_VALIDATE_CHECKPOINT_STORE: 'true'
{% if cloud_platform == "gke" %}
SLP_CHECKPOINT_STORE_TYPE_RAW: 'gcs'
CHECKPOINT_STORE_CONNECTION: {{ gke_gcs_url }}
SLP_CHECKPOINT_GCS_ISS: '{{ gcloud_sa_client_email }}'
SLP_CHECKPOINT_GCS_KEY: '{{ gcloud_service_account_pk }}'
SLP_CHECKPOINT_GCS_PROJECT_ID: '{{ gcloud_project_id }}'
SLP_CHECKPOINT_GCS_PATH: '{{ gke_bucket_name }}'
{% endif %}
{% if cloud_platform == "eks" %}
SLP_CHECKPOINT_STORE_TYPE_RAW: "s3"
SLP_CHECKPOINT_S3_ACCESS_KEY: "{{ aws_access_key }}"
SLP_CHECKPOINT_S3_SECRET_ACCESS_KEY: "{{ aws_secret_key }}"
SLP_CHECKPOINT_S3_REGION: "{{ eks_aws_region }}"
SLP_CHECKPOINT_S3_PATH: "{{ eks_aws_s3_bucket_name }}/{{ eks_k8s_cluster_name }}"
{% endif %}
{% if cloud_platform == "azure-aks" %}
SLP_CHECKPOINT_STORE_TYPE_RAW: "wasb"
SLP_CHECKPOINT_WASB_ACCOUNT_NAME: "{{aks_storage_account_prefix}}{{azure_resource_location}}"
SLP_CHECKPOINT_WASB_ACCOUNT_KEY: "{{aks_storage_account_key}}"
SLP_CHECKPOINT_WASB_PATH: "/{{ aks_cluster_name | replace('_', '-') }}/chkt"
{% endif %}
{% else %}
SLP_ENABLE_CHECKPOINT_STORE: 'false'
{% endif %}
SLP_CERT_DOMAIN: "{{ cert_domain }}"
LICENSE_AGREEMENT: true
NON_INTERACTIVE_MODE: true
SLP_TIMEOUT: 3600

SLP_CUSTOM_PROFILE: |-
  #!baseProfile: {{ base_profile }}
{% if bdh_one_node_installation != "yes" %}
  hana:
    memoryLimit: {{ hana_resources_limits_memory }}
    memoryRequest: {{ hana_resources_requests_memory }}
    overrides: |-
      profile: dev
      resources:
        requests:
          cpu: 1
  uaa:
    overrides: |-
      cpu:
        min: 0.5
  vsystem:
    vSystem:
      logLevel: debug
    overrides: |-
      vSystem:
        features:
          enforceNonRootApps: true
{% endif %}
{% if bdh_one_node_installation == "yes" %}
  hana:
    traceStorage: 1Gi
    dataStorage: 10Gi
    memoryLimit: 6Gi
    memoryRequest: 2Gi
    overrides: |-
      profile: dev
      resources:
        requests:
          cpu: 0
  storageGateway:
    replicas: 1
  uaa:
    overrides: |-
      cpu:
        min: 0.25
  consul:
    replicas: 1
  vsystem:
    vSystem:
      logLevel: debug
    overrides: |-
      vSystem:
        features:
          enforceNonRootApps: true
      applicationRuntimeStorage:
        enabled: true
        pvcMinimumSize: 100Gi
  voraCluster:
    template:
      components:
        dlog:
          replicationFactor: "1"
          standbyFactor: "0"
        disk:
          storageSize: 50Gi
          replicas: "1"
{% endif %}
