FROM di-dev-cicd-docker.int.repositories.cloud.sap/bdh-infra-tools/alpine_ssh_base:1.0 AS ssh_base
FROM di-dev-cicd-docker.int.repositories.cloud.sap/bdh-infra-tools/ansible-runtime-base:latest

ARG KUBECTL_CLI_VERSION=1.13.8
ARG HELM_VERSION=2.11.0
ARG INTERNAL_DOCKER_REGISTRY_DOMAIN_NAME=public.int.repositories.cloud.sap
ARG INTERNAL_DOCKER_REGISTRY_PORT=443

# Install kubectl
RUN curl -Lo /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v$KUBECTL_CLI_VERSION/bin/linux/amd64/kubectl
RUN chmod +x /usr/local/bin/kubectl

# Install Helm
RUN curl -Lo /tmp/helm-linux-amd64.tar.gz https://kubernetes-helm.storage.googleapis.com/helm-v$HELM_VERSION-linux-amd64.tar.gz
RUN tar -xvf /tmp/helm-linux-amd64.tar.gz -C /tmp/
RUN chmod +x  /tmp/linux-amd64/helm && sudo mv /tmp/linux-amd64/helm /usr/local/bin/

RUN pip install azure-mgmt-containerservice==3.0.1 && \
    pip install azure-mgmt-containerregistry==0.2.1 && \
    pip install azure-mgmt-resource==0.30.0rc5 && \
    pip install azure-mgmt-storage==0.30.0rc5 && \
    pip install azure-mgmt-network==0.30.0rc5 && \
    pip install azure-mgmt-nspkg && \
    pip install azure_nspkg && \
    pip install azure-common==1.1.4

RUN openssl s_client -connect ${INTERNAL_DOCKER_REGISTRY_DOMAIN_NAME}:${INTERNAL_DOCKER_REGISTRY_PORT} -showcerts </dev/null 2>/dev/null | openssl x509 -outform PEM | tee /usr/local/share/ca-certificates/${INTERNAL_DOCKER_REGISTRY_DOMAIN_NAME}.crt
RUN update-ca-certificates

# Now copy auto deployment code
COPY common/ansible /ansible
COPY fulcrum/script/bash/deployment.sh /ansible/deployment.sh
COPY fulcrum/script/bash/docker_start.sh /ansible/docker_start.sh
COPY hera/ci/bdh-infra-tools/infrabox/service_check/junit_xml  /project/junit_xml
COPY hera/ci/bdh-infra-tools/infrabox/service_check/six.py \
     common/ansible/tools/bdh_health_check.py \
     /project/

COPY --from=ssh_base /root/.ssh/* /root/.ssh/
RUN chmod 600 /root/.ssh/id_rsa && chmod 600 /root/.ssh/id_rsa-gerrit

RUN  chmod 600 /ansible/id_rsa && \
     chmod +x /ansible/deployment.sh && \
     chmod +x /ansible/docker_start.sh

WORKDIR /ansible/

ENTRYPOINT /ansible/docker_start.sh && /ansible/deployment.sh
